ETAPA 1
1. Crear proyecto
2. Instalar devise con budle add devise
3. Instalar devise en proyecto con rails g devise:install
4. Usar  config.action_mailer.default_url_options = { host: 'localhost', port: 3000 } en config/environments/development.rb
5. Crear la ruta en homes#index, crear su respectivo controlador para que funcione
6. Pegar lo siguiente en el layout  
    <p class="notice"><%= notice %></p>
    <p class="alert"><%= alert %></p>
7. Usar 'rails g devise "model"' para crear un modelo que use devise hehe
8. migrar con rails db:migrate para hacer efectivos los cambios y revisar las rutas

9. Instalar Bootstrap y registrarse usando la url de http://localhost:3000/users/sign_up
    9. Si si quiere usar bootstrap de manera local, debe revisarse la documentación de Render para Rails

10. Comfigurar el "config.sign_out_via = :delete" por ":get" en config/initalizers/devise.rb en la linea 269. Esto para que funcione como enlace y no como botón
11. Generar un navbar con sus respectivos enlaces para iniciar sesión, salir y crear un nuevo usuario.
12. Generar una carpeta /componentes en /views y crear un componente reutilizable llamado _barra.html.erb
    12. Cortar todo el codigo del navbar del layout y ponerlo en el componente creado, renderizarlo cuando queramos con <%= render "componentes/barra" %>

ETAPA 2
13. Usar este codigo en la vista layout. Preguntará con user_signed_in? si el usuario tiene una sesión activa y pondrá html en consecuencia
    <% if user_signed_in? %>
        <%= link_to "Salir", destroy_user_session_path, class: "nav-link" %>
    <%else%>
        <%= link_to "Login", new_user_session_path, class: "nav-link" %>
        <%= link_to "Registrarse", new_user_registration_path, class: "nav-link" %>
    <%end%>

FALTA CURRENT USER
14. <span class="text-white nav-link fst-italic"><%= current_user.email %></span>

ETAPA 3
15. Usar rails g scaffold publication image title description:text user:references
    15.1 :text es para TEXTOS GRANDES
    15.2 Al crear scaffolds evitar usar referencias, es mucho trabajo

16. Se puede poner el current_user en el formulario para publicar un post
     <%= form.text_field :user_id, value: current_user.id %> También funciona con form.hidden_field
     16.1 Se puede poner @publication.user_id = current_user.id en el controlador de publicaciones para un auto reconocimiento
17. Hacer uso de before_action :authenticate_user! en el controlador de publicaciones para no permitir publicaciones sin usuario
18. Editar a gusto el mostrar de publicaciones _publication.html.erb y hacer nuestra publicacion

19. Modificar el current del controlador con una excepcion de esta manera
    before_action :authenticate_user!, except: [:index, :show]
20. Crear un nuevo usuario y hacer un post con el

21. Editar los permisos en el show de las publicaciones, para que solo el dueño de la publicacion tenga permisos de edicion
    <%if user_signed_in?%>
        <%if current_user.id == @publication.user_id%>
        <%= link_to "Edit this publication", edit_publication_path(@publication) %> |
        <%= button_to "Destroy this publication", @publication, method: :delete %>
        <%end%>
    <%end%>

22. Añadir un redireccionamiento a las publicaciones desde el inicio de sesión
    get '/publications', to: 'publications#index', as: 'user_root'

23. Por seguridad agregar esto en el application_controller
        def after_sign_in_path_path_for(resource)
            publications_path
        end